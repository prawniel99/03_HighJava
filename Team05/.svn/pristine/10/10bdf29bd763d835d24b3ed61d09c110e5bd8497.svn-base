<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="kr.or.ddit.member.vo.MemberVO" %>
<%@ page import="java.text.SimpleDateFormat" %>
<%@ page import="java.util.Date" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>회원 상세 정보</title>
    <style>
    /* - 정석진 2024-09-23-  */
    /* 전체 페이지 스타일 */
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 800 600'%3E%3Cdefs%3E%3Cpattern id='fabric' x='0' y='0' width='80' height='80' patternUnits='userSpaceOnUse'%3E%3Cpath d='M0 0h80v80H0z' fill='%23e6e2d3'/%3E%3Cpath d='M0 0v80h80V0H0zm40 80V0m-20 0v80m60-80v80m-80-40h80' stroke='%23d4cfc0' stroke-width='1'/%3E%3Cpath d='M0 0l80 80M80 0L0 80' stroke='%23d4cfc0' stroke-width='0.5'/%3E%3C/pattern%3E%3C/defs%3E%3Crect width='100%25' height='100%25' fill='url(%23fabric)'/%3E%3Cg opacity='0.7'%3E%3Cpath d='M0 150 Q 400 50, 800 150' fill='none' stroke='%23c9b8a8' stroke-width='100'/%3E%3Cpath d='M0 450 Q 400 350, 800 450' fill='none' stroke='%23b0a090' stroke-width='100'/%3E%3C/g%3E%3C/svg%3E");
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }

        /* 컨테이너 스타일 */
        .container {
            background-color: rgba(230, 226, 211, 0.8);
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 350px;
            backdrop-filter: blur(5px);
        }

        /* 제목 스타일 */
        h2 {
            text-align: center;
            color: #4a4a4a;
            margin-bottom: 1.5rem;
        }

         /* 테이블 스타일 수정 */
    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        padding: 10px;
        border: 1px solid #d4cfc0;
        text-align: left;
    }

    th {
        background-color: #e6e2d3;
        font-weight: bold;
        color: #4a4a4a;
        text-align: center;
        width: 30%; /* 첫 번째 열의 너비를 고정 */
    }

        /* 버튼 컨테이너 스타일 */
        .button-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
        }

        /* 버튼 스타일 수정 */
        .btn {
        padding: 10px 5px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        color: white;
        width: 22%;
        text-align: center;
        text-decoration: none;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background-color 0.3s;
        height: 40px; /* 모든 버튼의 높이를 동일하게 설정 */
        }

        /* 수정 버튼 스타일 */
        .btn-edit {
        background-color: #7a6f5d;
        color: white;
        text-decoration: none;
        }
        
        .btn-edit:hover {
        background-color: #5f5648;
        }

        /* 삭제 버튼 스타일 */
        .btn-delete {
            background-color: #d32f2f;
        }
        .btn-delete:hover {
            background-color: #b71c1c;
        }

        /* 뒤로 버튼 스타일 */
        .btn-back {
            background-color: #9e9e9e;
        }
        .btn-back:hover {
            background-color: #757575;
        }

        /* 로그아웃 버튼 스타일 */
        .btn-logout {
            background-color: #607d8b;
        }
        .btn-logout:hover {
            background-color: #455a64;
        }

        /* 에러 메시지 스타일 */
        .error-message {
            color: #d32f2f;
            text-align: center;
            margin-bottom: 10px;
            font-size: 0.9em;
        }
</style>
    <script>
    // 회원 삭제 확인 함수
    function confirmDelete() {
        if(confirm('정말로 회원을 삭제하시겠습니까?')) {
            // 확인 시 숨겨진 삭제 폼 제출
            document.getElementById('deleteForm').submit();
        }
    }
    
    // 로그아웃 함수
    function logout() {
        if(confirm('로그아웃 하시겠습니까?')) {
            // 확인 시 로그아웃 처리 페이지로 이동
            location.href = '<%=request.getContextPath()%>/member/logout.do';
        }
    }
    </script>
</head>
<body>
    <div class="container">
        <h2>회원 상세 정보</h2>
        
        <%
            // 컨트롤러에서 전달받은 회원 정보를 가져옴
            MemberVO memberDetail = (MemberVO) request.getAttribute("memberDetail");
            
            // 생년월일 포맷팅을 위한 SimpleDateFormat 객체 생성
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            
        %>
        
        <!-- 회원 정보를 표시하는 테이블 -->
        <table>
            <tr>
                <th>ID</th>
                <td><%= memberDetail.getMemId() %></td>
            </tr>
            <tr>
                <th>이름</th>
                <td><%= memberDetail.getMemName() %></td>
            </tr>
            <tr>
                <th>생년월일</th>
                <td>
                    <%
                        Date memBirth = memberDetail.getMemBirth();
                        // 생년월일이 null이 아닐 경우 포맷팅, 그렇지 않으면 "정보 없음" 표시
                        out.print(memBirth != null ? sdf.format(memBirth) : "정보 없음");
                    %>
                </td>
            </tr>
            <tr>
                <th>이메일</th>
                <td><%= memberDetail.getMemEmail() %></td>
            </tr>
            <tr>
                <th>전화번호</th>
                <td><%= memberDetail.getMemPhone() %></td>
            </tr>
            <tr>
                <th>주소</th>
                <td><%= memberDetail.getMemAddress() %></td>
            </tr>
            <tr>
                <th>상세주소</th>
                <td><%= memberDetail.getMemDetailAddress() %></td>
            </tr>
            <tr>
                <th>마일리지</th>
                <td><%= memberDetail.getMemMileage() %></td>
            </tr>
            <tr>
                <th>상태</th>
                <td><%= memberDetail.getMemStatus() == 1 ? "활성" : "비활성" %></td>
            </tr>
        </table>
        
        <!-- 회원 삭제 실패 시 에러 메시지 표시 -->
        <% if(request.getParameter("error") != null && request.getParameter("error").equals("deleteFailed")) { %>
            <p class="error-message">회원 삭제에 실패했습니다.</p>
        <% } %>
        
        <!-- 버튼 그룹 -->
        <div class="button-container">
            <!-- 수정 버튼: 회원 정보 수정 페이지로 이동 (스타일 적용) -->
            <a href="<%=request.getContextPath()%>/member/editMember.do?memId=<%= memberDetail.getMemId() %>" class="btn btn-edit">수정</a>
            
            <!-- 삭제 버튼: 삭제 확인 함수 호출 -->
            <button type="button" onclick="confirmDelete()" class="btn btn-delete">회원탈퇴</button>
            
            <!-- 뒤로가기 버튼 -->
            <button type="button" class="btn btn-back" onclick="history.back()">뒤로가기</button>
            
            <!-- 로그아웃 버튼: 로그아웃 함수 호출 -->
            <button type="button" onclick="logout()" class="btn btn-logout">로그아웃</button>
        </div>
        
        <!-- 회원 삭제를 위한 숨겨진 폼 -->
        <form id="deleteForm" action="<%=request.getContextPath()%>/member/deleteMember.do" method="post" style="display:none;">
            <input type="hidden" name="memId" value="<%= memberDetail.getMemId() %>">
        </form>
    </div>
</body>
</html>