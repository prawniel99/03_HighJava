package kr.or.ddit.basic;

// JDBC 예제 중 'JdbcTest05.java'를 Mybatis로 처리하는 프로그램을 작성하시오.
public class JdbcToMybatis {

	public static void main(String[] args) {

		
		
		
		
		
		
		
		// 2-1. insert 작업 System.out.println("insert 작업 시작");
		System.out.println("Lprod_id 입력 >> ");
		int lprodId = scan.nextInt();
		
		System.out.println("Lprod_gu 입력 >> ");
		String lprodGu = scan.next();
		
		System.out.println("Lprod_nm 입력 >> ");
		String lprodNm = scan.next();
		
		// insert할 데이터들을 VO객체에 저장한다.
		LprodVO lvo = new LprodVO();
		lvo.setLprod_id(lprodId);
		lvo.setLprod_gu(lprodGu);
		lvo.setLprod_nm(lprodNm);
		
		SqlSession session = null;
		try {
			// SQL문을 호출해서 실행할 수 있는 SqlSession 객체를 생성한다.
			// ==> SqlSessionFactory 객체의 openSession() 메소드를 이용한다.
			// 형식) SqlSessionFactory객체.openSession(논리값)
			// ==> '논리값'이 true이면 AutoCommit이 활성화된 상태로 생성되고
			// '논리값'이 false이거나 생략되면 AutoCommit이 비활성화된 상태로 생성된다.
			session = sqlSessionFactory.openSession();
		
			// SqlSession 객체를 이용하여 처리할 SQL문을 호출해서 실행한다.
			// 형식) SqlSession객체.insert("namespace속성값.id속성값", 파라미터값);
			// ==> 반환값: 실행에 성공한 레코드 수
			int insertCnt = session.insert("lprod.insertLprod", lvo);
		
			// SqlSession객체를 생성할 때 AutoCommit을 비활성화된 상태로 생성했을 때에는
			// commit을 직접 실행해야 한다.
			if(insertCnt>0){
				session.commit();
				System.out.println("insert 작업 성공");
			} else {
				System.out.println("insert 작업 실패");
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			// 작업이 끝나면
			SqlSession 객체를 닫아준다. session.close();
		}
		
		System.out.println("-----------------------------------------------------------------------");
	}

}
